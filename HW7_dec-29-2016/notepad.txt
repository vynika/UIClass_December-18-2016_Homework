1Q.what is the difference between id, class, attribute, tagName selectors and differences between them, when to use what?
A. In CSS, selectors are used to add styles to the elements. these are used as patterns.
id: Use the id attribute in an element to assign an ID to the element. It is up to you what name you choose for the ID. The ID name must be unique in the document.
syntax: 
	<style>
#id {
    background-color: yellow;
}
</style>

class: Use the class attribute in an element to assign the element to a named class. It is up to you what name you choose for the class. Multiple elements in a document can have the same class value.

syntax:

<style>
.class {
    background-color: lightblue;
}
</style>

attribute: You are not restricted to the two special attributes, class and id. You can specify other attributes by using square brackets. Inside the brackets you put the attribute name, optionally followed by a matching operator and a value.
 syntax:
 
 a[attribute] {
    color: yellow;
}


2Q. what is CSS specificity?
A.
Specificity:
Specificity is the means by which browsers decide which CSS property values are the most relevant to an element and, therefore, will be applied. Specificity is based on the matching rules which are composed of different sorts of CSS selectors.
CSS Specificity is one of the most difficult concepts to grasp in Cascading Stylesheets. 
The different weight of selectors is usually the reason why your CSS-rules don’t apply to some elements, although you think they should have. 
In order to minimize the time for bug hunting you need to understand, how browsers interpret your code. And to understand that, you need to have a firm understanding on how specificity works.
In most cases such problems are caused by the simple fact that somewhere among your CSS rules you’ve defined a more specific selector.


3Q. All CSS selectors?
A. There are different selectors used in CSS.
few are:
universal selector, Type selectors, Descendant selectors, child selectors, Adjacent sibling selector, class selectors, id selectors, attribute selectors.


4Q.All CSS properties?
A. the different CSS properties are:
Color
Background and Borders
Basic Box
Flexible Box
Text
Text Decoration
Fonts
Writing Modes
Table
Lists and Counters
Animation
Transform
Transition
Basic User Interface
Multi-column
Paged Media
Generated Content
Filter Effects
Image/Replaced Content
Masking
Speech
Marquee


5Q. Descendant selector in CSS?
A. The descendant selector matches all elements that are descendants of a specified element. The first simple selector within this selector represents the ancestor element—a structurally superior element, such as a parent element, or the parent of a parent element.


6Q. Child selector is CSS?
A.
The child selector selects all elements that are the immediate children of a specified element.

syntax:
div > p {
    background-color: yellow;
}

7Q.Adjacent sibling selector?
A.The adjacent sibling selector selects all elements that are the adjacent siblings of a specified element.

Sibling elements must have the same parent element, and "adjacent" means "immediately following".
syntax:
div + p {
    background-color: yellow;
}

8Q. Multiple selectors in CSS?
A. I am not sure with this answer.

9Q. Variations in attribute based selectors?
A. The [attribute] selector is used to select elements with a specified attribute.

syntax:
a[target] {
    background-color: yellow;
}

The [attribute="value"] selector is used to select elements with a specified attribute and value.
syntax:
a[target="_blank"] { 
    background-color: yellow;
}

The [attribute~="value"] selector is used to select elements with an attribute value containing a specified word.
syntax:
[title~="flower"] {
    border: 5px solid yellow;
}



The [attribute|="value"] selector is used to select elements with the specified attribute starting with the specified value.
syntax:
[class|="top"] {
    background: yellow;
}



The [attribute^="value"] selector is used to select elements whose attribute value begins with a specified value.

syntax:
[class^="top"] {
    background: yellow;
}